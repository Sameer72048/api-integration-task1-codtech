import React, { useState, useEffect } from 'react';

interface WeatherData {
  name: string;
  main: {
    temp: number;
    humidity: number;
  };
  weather: {
    description: string;
    icon: string;
  }[];
  wind: {
    speed: number;
  }
}

const WeatherApp: React.FC = () => {
  const [city, setCity] = useState<string>('');
  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);
    const [loading, setLoading] = useState<boolean>(false);

  const handleCityChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setCity(event.target.value);
  };

  const fetchWeatherData = async () => {
        setLoading(true);
    if (!city) {
        setWeatherData(null);
        setLoading(false);
        return;
    }
    try {
      const apiKey = 'YOUR_API_KEY'; // Replace with your actual API key
      const response = await fetch(
        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`
      );
        if (!response.ok) {
            setWeatherData(null);
            setLoading(false);
            return;
      }
      const data = await response.json();
      setWeatherData(data);
    } catch (error) {
      console.error('Error fetching weather data:', error);
        setWeatherData(null);
    } finally {
      setLoading(false)
    }
  };


    const handleSubmit = (event: React.FormEvent) => {
        event.preventDefault();
        fetchWeatherData();
    };


  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
        <h1 className="text-3xl font-bold mb-6 text-gray-800">Weather App</h1>
      <form onSubmit={handleSubmit} className="mb-6 w-full max-w-md">
        <div className="flex">
          <input
            type="text"
            placeholder="Enter city"
              value={city}
              onChange={handleCityChange}
            className="border border-gray-300 rounded-l-md px-4 py-2 w-full focus:outline-none focus:border-blue-500"
          />
          <button
            type="submit"
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r-md focus:outline-none focus:shadow-outline"
          >
            Search
          </button>
        </div>
      </form>


        {loading && (
            <div className="flex justify-center items-center">
                <div className="animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500"></div>
            </div>
        )}

      {weatherData && (
        <div className="bg-white shadow-md rounded-lg p-6 w-full max-w-md">
          <h2 className="text-2xl font-semibold mb-4 text-gray-800">{weatherData.name}</h2>
            <div className="flex items-center mb-4">
              {weatherData.weather && weatherData.weather[0]?.icon &&
               <img
                    src={`http://openweathermap.org/img/w/${weatherData.weather[0].icon}.png`}
                    alt={weatherData.weather[0].description}
                    className="w-16 h-16 mr-4"
                />
              }
                <div>
                <p className="text-xl text-gray-700">
                  {weatherData.weather && weatherData.weather[0]?.description}
                  </p>
                   <p className="text-xl text-gray-700">
                       Temperature: {weatherData.main.temp}Â°C
                   </p>
                </div>
          </div>


          <div className="flex justify-between text-gray-700">
             <p>Humidity: {weatherData.main.humidity}%</p>
             <p>Wind Speed: {weatherData.wind.speed} m/s</p>
          </div>
        </div>
      )}
    </div>
  );
};

export default WeatherApp;
